//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpressionEngine.Calculator.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ExpressionEngine.Calculator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires {0} parameters. {1} was given..
        /// </summary>
        internal static string ErrorArgumentCount {
            get {
                return ResourceManager.GetString("ErrorArgumentCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t modify or delete a constant value..
        /// </summary>
        internal static string ErrorConstantWriteDelete {
            get {
                return ResourceManager.GetString("ErrorConstantWriteDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Help found for command: {0}.
        /// </summary>
        internal static string ErrorNoHelpFound {
            get {
                return ResourceManager.GetString("ErrorNoHelpFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown variable: {0}.
        /// </summary>
        internal static string ErrorUnknownVariable {
            get {
                return ResourceManager.GetString("ErrorUnknownVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clears the terminal output.
        ///Usage: clear.
        /// </summary>
        internal static string HelpClear {
            get {
                return ResourceManager.GetString("HelpClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists available commands
        ///Usage: cmdlist.
        /// </summary>
        internal static string HelpCmdlist {
            get {
                return ResourceManager.GetString("HelpCmdlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Evaluates an expression.
        ///Usage: eval &lt;expression&gt;.
        /// </summary>
        internal static string HelpEval {
            get {
                return ResourceManager.GetString("HelpEval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit the program
        ///Usage: Exit.
        /// </summary>
        internal static string HelpExit {
            get {
                return ResourceManager.GetString("HelpExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print usage info for a command.
        ///Usage: Help &lt;command name&gt;.
        /// </summary>
        internal static string HelpHelp {
            get {
                return ResourceManager.GetString("HelpHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines a variable or an expression for later usage.
        ///Usage: let &lt;variable name&gt; &lt;expression&gt;.
        /// </summary>
        internal static string HelpLet {
            get {
                return ResourceManager.GetString("HelpLet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unset a variable or all variables. If invoked without parameters all variables are unset.
        ///Usage: unset &lt;variable name&gt;.
        /// </summary>
        internal static string HelpUnset {
            get {
                return ResourceManager.GetString("HelpUnset", resourceCulture);
            }
        }
    }
}
